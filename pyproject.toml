[tool.black]
line-length = 120

[tool.isort]
line_length = 120
float_to_top = true
force_alphabetical_sort = true
force_to_top = "__future__"
profile = "black"

[tool.mypy]
files = ["./src", "./test"]

[tool.mpyp.pytf3d]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_no_return = true

[tool.pylint.master]
jobs=0

[tool.pylint.message_control]
# only give us the severe stuff
disable=[
    "C",
    "R",
    "fixme",
    "import-error",
    "no-name-in-module"
]
enable=[
    "cyclic-import",
    "useless-object-inheritance"
]
reports="no"
score="no"

[tool.pylint.format]
max-line-length=120

[tool.pylint.logging]
# 'old' means using '%'-formatting, while 'new' is for '{}'-formatting.
logging-format-style="old"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--no-cov-on-fail --cov=src --cov=test"
testpaths = ["test"]


[tool.poetry]
name = "pytf3d"
version = "0.0.0"
description = "a lightweight library for handling rigid body transformations in 3D"
authors = ["Xaver Kroischke <xk.coding@gmail.com>"]
maintainers = ["Xaver Kroischke <xk.coding@gmail.com>"]
license = "MPL-2.0"
readme = "README.md"
packages = [
    { include = "pytf3d", from = "src" },
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.6.1"
hypothesis = {version = "^6.14", optional = true}
numpy = [
    {version = "^1.19.0", python = "^3.6.0"},
    {version = "^1.20", python = "^3.7"}
]

[tool.poetry.extras]
testing = ["hypothesis"]

[tool.poetry.dev-dependencies]
hypothesis = "^6.14"
pytest = "^6.2"
pytest-cov = "^2.12"
pre-commit = "^2.13"
bump2version = "^1.0.1"
typing_extensions = {version = "^3.10", python = "^3.7"}
mypy = {version = "^0.910", python = "^3.7"}

# see .pre-commit-config.yaml for remaining tools


[tool.coverage.run]
branch = true
concurrency = ["thread", "multiprocessing"]
[tool.coverage.report]
exclude_lines =["pragma: not covered", "@overload"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
